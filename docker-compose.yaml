version: '3.8'

services:
  exam-dotnet-api:
    container_name: exam-dotnet-api
    build:
      context: ./dockerfiles/api
      dockerfile: Dockerfile.api
    ports:
      - "8005:8005"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8005
    volumes:
      - ./api:/app
    depends_on:
      exam-pg-container:
        condition: service_healthy
    networks:
      - mynetwork

  angular-app:
    container_name: angular-app
    build:
      context: ./dockerfiles/ui
      dockerfile: Dockerfile.ui
    image: exam-angular:latest
    ports:
      - "4200:4200"
    environment:
      - NODE_ENV=development
    depends_on:
      - exam-dotnet-api
    networks:
      - mynetwork
    volumes:
      - ./ui:/app      

  exam-pg-container:
    container_name: exam_pg_container
    image: postgres:14
    restart: always
    environment:
      POSTGRES_USER: examuser
      POSTGRES_PASSWORD: exampass
      POSTGRES_DB: worksheet
    ports:
      - "5433:5432"
    volumes:
     - ./postgres/examdata:/var/lib/postgresql/data
     - ./postgres/init-scripts:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U examuser -d examination"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - mynetwork  

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@exam.com
      PGADMIN_DEFAULT_PASSWORD: adminpass
    ports:
      - "5051:80"
    depends_on:
      exam-pg-container:
        condition: service_healthy
    networks:
      - mynetwork

  nginx:
    build:
      context: ./dockerfiles/nginx
      dockerfile: Dockerfile
    ports:
      - "80:80"
    depends_on:
      - exam-dotnet-api
      - angular-app
    networks:
      - mynetwork


  minio:
    image: minio/minio
    container_name: minio
    restart: always
    ports:
      - "9000:9000"  # MinIO API Portu
      - "9001:9001"  # MinIO Yönetim Paneli
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - ./minio-data:/data
    networks:
      - mynetwork

  question-detector-dev:
    container_name: question-detector-dev
    build:
      context: .
      dockerfile: question-detector/Dockerfile
    volumes:
      - ./question-detector/app:/app
    working_dir: /app
    tty: true
    stdin_open: true
    ports:
      - "8888:8888"  # Jupyter Notebook veya diğer servisler için hazır
      - "8080:8080"  # FastAPI veya diğer servisler için hazır
    environment:
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=1
    networks:
      - mynetwork


networks:   
  mynetwork:
    driver: bridge
