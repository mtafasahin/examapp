// <auto-generated />
using System;
using ExamApp.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ExamApp.Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250314220208_newSeedForMath3")]
    partial class newSeedForMath3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ExamApp.Api.Data.Answer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Height")
                        .HasColumnType("integer");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("text");

                    b.Property<bool>("IsCanvasQuestion")
                        .HasColumnType("boolean");

                    b.Property<int>("QuestionId")
                        .HasColumnType("integer");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("Width")
                        .HasColumnType("integer");

                    b.Property<double?>("X")
                        .HasColumnType("double precision");

                    b.Property<double?>("Y")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.ToTable("Answers");
                });

            modelBuilder.Entity("ExamApp.Api.Data.Badge", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RequiredQuestionsSolved")
                        .HasColumnType("integer");

                    b.Property<int>("RequiredXP")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Badge");
                });

            modelBuilder.Entity("ExamApp.Api.Data.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("ExamApp.Api.Data.BookTest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.ToTable("BookTests");
                });

            modelBuilder.Entity("ExamApp.Api.Data.Leaderboard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Rank")
                        .HasColumnType("integer");

                    b.Property<DateTime>("RecordedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("StudentId")
                        .HasColumnType("integer");

                    b.Property<string>("TimePeriod")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TotalPoints")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.ToTable("Leaderboards");
                });

            modelBuilder.Entity("ExamApp.Api.Data.Parent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Parents");
                });

            modelBuilder.Entity("ExamApp.Api.Data.Passage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Height")
                        .HasColumnType("integer");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("text");

                    b.Property<bool>("IsCanvasQuestion")
                        .HasColumnType("boolean");

                    b.Property<string>("Text")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.Property<int?>("Width")
                        .HasColumnType("integer");

                    b.Property<double?>("X")
                        .HasColumnType("double precision");

                    b.Property<double?>("Y")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("Passage");
                });

            modelBuilder.Entity("ExamApp.Api.Data.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AnswerColCount")
                        .HasColumnType("integer");

                    b.Property<int?>("CorrectAnswerId")
                        .HasColumnType("integer");

                    b.Property<int>("DifficultyLevel")
                        .HasColumnType("integer");

                    b.Property<int?>("Height")
                        .HasColumnType("integer");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("text");

                    b.Property<bool>("IsCanvasQuestion")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsExample")
                        .HasColumnType("boolean");

                    b.Property<int?>("PassageId")
                        .HasColumnType("integer");

                    b.Property<int>("Point")
                        .HasColumnType("integer");

                    b.Property<string>("PracticeCorrectAnswer")
                        .HasColumnType("text");

                    b.Property<string>("SubText")
                        .HasColumnType("text");

                    b.Property<int?>("SubTopicId")
                        .HasColumnType("integer");

                    b.Property<int>("SubjectId")
                        .HasColumnType("integer");

                    b.Property<string>("Text")
                        .HasColumnType("text");

                    b.Property<int?>("TopicId")
                        .HasColumnType("integer");

                    b.Property<int?>("Width")
                        .HasColumnType("integer");

                    b.Property<double?>("X")
                        .HasColumnType("double precision");

                    b.Property<double?>("Y")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("CorrectAnswerId");

                    b.HasIndex("PassageId");

                    b.HasIndex("SubTopicId");

                    b.HasIndex("SubjectId");

                    b.HasIndex("TopicId");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("ExamApp.Api.Data.Reward", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PointsRequired")
                        .HasColumnType("integer");

                    b.Property<int>("Stock")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Rewards");
                });

            modelBuilder.Entity("ExamApp.Api.Data.SpecialEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RewardPoints")
                        .HasColumnType("integer");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("SpecialEvents");
                });

            modelBuilder.Entity("ExamApp.Api.Data.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("GradeId")
                        .HasColumnType("integer");

                    b.Property<int?>("ParentId")
                        .HasColumnType("integer");

                    b.Property<string>("SchoolName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("StudentNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("GradeId");

                    b.HasIndex("ParentId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Students");
                });

            modelBuilder.Entity("ExamApp.Api.Data.StudentBadge", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BadgeId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("EarnedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("StudentId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BadgeId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentBadges");
                });

            modelBuilder.Entity("ExamApp.Api.Data.StudentPointHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("EarnedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Points")
                        .HasColumnType("integer");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("StudentId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentPointHistories");
                });

            modelBuilder.Entity("ExamApp.Api.Data.StudentReward", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("PointsSpent")
                        .HasColumnType("integer");

                    b.Property<DateTime>("RedeemedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("RewardId")
                        .HasColumnType("integer");

                    b.Property<int>("StudentId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RewardId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentRewards");
                });

            modelBuilder.Entity("ExamApp.Api.Data.StudentSpecialEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Completed")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("CompletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("SpecialEventId")
                        .HasColumnType("integer");

                    b.Property<int>("StudentId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("SpecialEventId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentSpecialEvents");
                });

            modelBuilder.Entity("ExamApp.Api.Data.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("ExamApp.Api.Data.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AvatarUrl")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ExamApp.Api.Data.WorksheetQuestion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Order")
                        .HasColumnType("integer");

                    b.Property<int>("QuestionId")
                        .HasColumnType("integer");

                    b.Property<int>("TestId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.HasIndex("TestId");

                    b.ToTable("TestQuestions");
                });

            modelBuilder.Entity("Grade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("Grades");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "1. Sınıf"
                        },
                        new
                        {
                            Id = 2,
                            Name = "2. Sınıf"
                        },
                        new
                        {
                            Id = 3,
                            Name = "3. Sınıf"
                        },
                        new
                        {
                            Id = 4,
                            Name = "4. Sınıf"
                        },
                        new
                        {
                            Id = 5,
                            Name = "5. Sınıf"
                        },
                        new
                        {
                            Id = 6,
                            Name = "6. Sınıf"
                        },
                        new
                        {
                            Id = 7,
                            Name = "7. Sınıf"
                        },
                        new
                        {
                            Id = 8,
                            Name = "8. Sınıf"
                        },
                        new
                        {
                            Id = 9,
                            Name = "9. Sınıf"
                        },
                        new
                        {
                            Id = 10,
                            Name = "10. Sınıf"
                        },
                        new
                        {
                            Id = 11,
                            Name = "11. Sınıf"
                        },
                        new
                        {
                            Id = 12,
                            Name = "12. Sınıf"
                        });
                });

            modelBuilder.Entity("GradeSubject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("GradeId")
                        .HasColumnType("integer");

                    b.Property<int>("SubjectId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("GradeId");

                    b.HasIndex("SubjectId");

                    b.ToTable("GradeSubjects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GradeId = 1,
                            SubjectId = 1
                        },
                        new
                        {
                            Id = 2,
                            GradeId = 1,
                            SubjectId = 2
                        },
                        new
                        {
                            Id = 3,
                            GradeId = 1,
                            SubjectId = 3
                        },
                        new
                        {
                            Id = 4,
                            GradeId = 2,
                            SubjectId = 1
                        },
                        new
                        {
                            Id = 5,
                            GradeId = 2,
                            SubjectId = 2
                        },
                        new
                        {
                            Id = 6,
                            GradeId = 2,
                            SubjectId = 3
                        },
                        new
                        {
                            Id = 7,
                            GradeId = 3,
                            SubjectId = 1
                        },
                        new
                        {
                            Id = 8,
                            GradeId = 3,
                            SubjectId = 2
                        },
                        new
                        {
                            Id = 9,
                            GradeId = 3,
                            SubjectId = 3
                        },
                        new
                        {
                            Id = 10,
                            GradeId = 3,
                            SubjectId = 4
                        },
                        new
                        {
                            Id = 11,
                            GradeId = 4,
                            SubjectId = 1
                        },
                        new
                        {
                            Id = 12,
                            GradeId = 4,
                            SubjectId = 2
                        },
                        new
                        {
                            Id = 13,
                            GradeId = 4,
                            SubjectId = 4
                        },
                        new
                        {
                            Id = 14,
                            GradeId = 4,
                            SubjectId = 5
                        },
                        new
                        {
                            Id = 15,
                            GradeId = 5,
                            SubjectId = 1
                        },
                        new
                        {
                            Id = 16,
                            GradeId = 5,
                            SubjectId = 2
                        },
                        new
                        {
                            Id = 17,
                            GradeId = 5,
                            SubjectId = 4
                        },
                        new
                        {
                            Id = 18,
                            GradeId = 5,
                            SubjectId = 5
                        },
                        new
                        {
                            Id = 19,
                            GradeId = 5,
                            SubjectId = 7
                        },
                        new
                        {
                            Id = 20,
                            GradeId = 6,
                            SubjectId = 1
                        },
                        new
                        {
                            Id = 21,
                            GradeId = 6,
                            SubjectId = 2
                        },
                        new
                        {
                            Id = 22,
                            GradeId = 6,
                            SubjectId = 4
                        },
                        new
                        {
                            Id = 23,
                            GradeId = 6,
                            SubjectId = 5
                        },
                        new
                        {
                            Id = 24,
                            GradeId = 9,
                            SubjectId = 9
                        },
                        new
                        {
                            Id = 25,
                            GradeId = 9,
                            SubjectId = 10
                        },
                        new
                        {
                            Id = 26,
                            GradeId = 9,
                            SubjectId = 11
                        },
                        new
                        {
                            Id = 27,
                            GradeId = 9,
                            SubjectId = 2
                        },
                        new
                        {
                            Id = 28,
                            GradeId = 9,
                            SubjectId = 12
                        },
                        new
                        {
                            Id = 29,
                            GradeId = 9,
                            SubjectId = 13
                        },
                        new
                        {
                            Id = 30,
                            GradeId = 9,
                            SubjectId = 14
                        },
                        new
                        {
                            Id = 31,
                            GradeId = 9,
                            SubjectId = 7
                        },
                        new
                        {
                            Id = 32,
                            GradeId = 10,
                            SubjectId = 9
                        },
                        new
                        {
                            Id = 33,
                            GradeId = 10,
                            SubjectId = 10
                        },
                        new
                        {
                            Id = 34,
                            GradeId = 10,
                            SubjectId = 11
                        },
                        new
                        {
                            Id = 35,
                            GradeId = 10,
                            SubjectId = 2
                        },
                        new
                        {
                            Id = 36,
                            GradeId = 10,
                            SubjectId = 12
                        },
                        new
                        {
                            Id = 37,
                            GradeId = 10,
                            SubjectId = 13
                        },
                        new
                        {
                            Id = 38,
                            GradeId = 10,
                            SubjectId = 14
                        },
                        new
                        {
                            Id = 39,
                            GradeId = 10,
                            SubjectId = 7
                        },
                        new
                        {
                            Id = 40,
                            GradeId = 11,
                            SubjectId = 9
                        },
                        new
                        {
                            Id = 41,
                            GradeId = 11,
                            SubjectId = 10
                        },
                        new
                        {
                            Id = 42,
                            GradeId = 11,
                            SubjectId = 12
                        },
                        new
                        {
                            Id = 43,
                            GradeId = 11,
                            SubjectId = 13
                        },
                        new
                        {
                            Id = 44,
                            GradeId = 11,
                            SubjectId = 14
                        },
                        new
                        {
                            Id = 45,
                            GradeId = 11,
                            SubjectId = 15
                        });
                });

            modelBuilder.Entity("StudentPoint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Level")
                        .HasColumnType("integer");

                    b.Property<int>("StudentId")
                        .HasColumnType("integer");

                    b.Property<int>("XP")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("StudentId")
                        .IsUnique();

                    b.ToTable("StudentPoints");
                });

            modelBuilder.Entity("SubTopic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TopicId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TopicId");

                    b.ToTable("SubTopics");

                    b.HasData(
                        new
                        {
                            Id = 24,
                            Name = "Üç Basamaklı Doğal Sayılar",
                            TopicId = 7
                        },
                        new
                        {
                            Id = 25,
                            Name = "Birer, Onar ve Yüzer Ritmik Sayma",
                            TopicId = 7
                        },
                        new
                        {
                            Id = 26,
                            Name = "Basamak Adları ve Basamak Değerleri",
                            TopicId = 7
                        },
                        new
                        {
                            Id = 27,
                            Name = "En Yakın Onluk ve Yüzlük",
                            TopicId = 7
                        },
                        new
                        {
                            Id = 28,
                            Name = "Doğal Sayıları Karşılaştırma ve Sıralama",
                            TopicId = 7
                        },
                        new
                        {
                            Id = 29,
                            Name = "Ritmik Saymalar",
                            TopicId = 7
                        },
                        new
                        {
                            Id = 30,
                            Name = "Sayı Örüntüleri",
                            TopicId = 7
                        },
                        new
                        {
                            Id = 31,
                            Name = "Eldeli ve Eldesiz Toplama İşlemi",
                            TopicId = 8
                        },
                        new
                        {
                            Id = 32,
                            Name = "Toplananların Yer Değiştirmesi",
                            TopicId = 8
                        },
                        new
                        {
                            Id = 33,
                            Name = "Onluk Bozmadan ve Bozarak Çıkarma İşlemi",
                            TopicId = 8
                        },
                        new
                        {
                            Id = 34,
                            Name = "10’un ve 100’ün Katlarıyla Zihinden Çıkarma İşlemi",
                            TopicId = 8
                        },
                        new
                        {
                            Id = 35,
                            Name = "Çarpım Tablosu",
                            TopicId = 9
                        },
                        new
                        {
                            Id = 36,
                            Name = "Çarpma İşlemi",
                            TopicId = 9
                        },
                        new
                        {
                            Id = 37,
                            Name = "10 ve 100 ile Kısa Yoldan Çarpma İşlemi",
                            TopicId = 9
                        },
                        new
                        {
                            Id = 38,
                            Name = "Çarpma İşlemi ile İlgili Problemler",
                            TopicId = 9
                        },
                        new
                        {
                            Id = 39,
                            Name = "İki Basamaklı Doğal Sayılarla Bölme İşlemi",
                            TopicId = 9
                        },
                        new
                        {
                            Id = 40,
                            Name = "Bölme İşlemi ile İlgili Problemler",
                            TopicId = 9
                        },
                        new
                        {
                            Id = 41,
                            Name = "Kesirler",
                            TopicId = 10
                        },
                        new
                        {
                            Id = 42,
                            Name = "Bir Çokluğun Belirtilen Kesir Kadarı",
                            TopicId = 10
                        },
                        new
                        {
                            Id = 43,
                            Name = "Zaman Ölçme",
                            TopicId = 11
                        },
                        new
                        {
                            Id = 44,
                            Name = "Zaman Ölçme ile İlgili Problemler",
                            TopicId = 11
                        },
                        new
                        {
                            Id = 45,
                            Name = "Geometrik Cisimler",
                            TopicId = 12
                        },
                        new
                        {
                            Id = 46,
                            Name = "Örüntüler",
                            TopicId = 12
                        },
                        new
                        {
                            Id = 47,
                            Name = "Uzunluk Ölçme",
                            TopicId = 13
                        },
                        new
                        {
                            Id = 48,
                            Name = "Alan Ölçme",
                            TopicId = 13
                        },
                        new
                        {
                            Id = 49,
                            Name = "Çevre Ölçme",
                            TopicId = 13
                        },
                        new
                        {
                            Id = 230,
                            Name = "Paralarımız",
                            TopicId = 211
                        },
                        new
                        {
                            Id = 1,
                            Name = "Harf, Hece, Sözcük 1",
                            TopicId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Harf, Hece, Sözcük 2",
                            TopicId = 1
                        },
                        new
                        {
                            Id = 3,
                            Name = "Eş Anlamlı (Anlamdaş) Sözcükler",
                            TopicId = 1
                        },
                        new
                        {
                            Id = 4,
                            Name = "Zıt (Karşıt) Anlamlı Sözcükler",
                            TopicId = 1
                        },
                        new
                        {
                            Id = 5,
                            Name = "Eş Sesli (Sesteş) Sözcükler",
                            TopicId = 1
                        },
                        new
                        {
                            Id = 6,
                            Name = "Sözcük Türetme - Ekler",
                            TopicId = 1
                        },
                        new
                        {
                            Id = 7,
                            Name = "Sözcükte Anlam",
                            TopicId = 1
                        },
                        new
                        {
                            Id = 8,
                            Name = "Cümle Türleri",
                            TopicId = 1
                        },
                        new
                        {
                            Id = 9,
                            Name = "Cümlede Anlam",
                            TopicId = 1
                        },
                        new
                        {
                            Id = 10,
                            Name = "Sebep-Sonuç İlişkileri",
                            TopicId = 2
                        },
                        new
                        {
                            Id = 11,
                            Name = "Karşılaştırmalar",
                            TopicId = 2
                        },
                        new
                        {
                            Id = 12,
                            Name = "Betimlemeler",
                            TopicId = 2
                        },
                        new
                        {
                            Id = 13,
                            Name = "5N 1K",
                            TopicId = 3
                        },
                        new
                        {
                            Id = 14,
                            Name = "Olayların Oluş Sırası",
                            TopicId = 3
                        },
                        new
                        {
                            Id = 15,
                            Name = "Öykü Unsurları",
                            TopicId = 3
                        },
                        new
                        {
                            Id = 16,
                            Name = "Başlık Konu İlişkisi",
                            TopicId = 3
                        },
                        new
                        {
                            Id = 17,
                            Name = "Ana Duygu",
                            TopicId = 3
                        },
                        new
                        {
                            Id = 18,
                            Name = "Ana Düşünce",
                            TopicId = 3
                        },
                        new
                        {
                            Id = 19,
                            Name = "Okuma Anlama 1",
                            TopicId = 3
                        },
                        new
                        {
                            Id = 20,
                            Name = "Okuma Anlama 2",
                            TopicId = 3
                        },
                        new
                        {
                            Id = 21,
                            Name = "Okuma Anlama 3",
                            TopicId = 3
                        },
                        new
                        {
                            Id = 22,
                            Name = "Görsel Yorumlama 1",
                            TopicId = 3
                        },
                        new
                        {
                            Id = 23,
                            Name = "Görsel Yorumlama 2",
                            TopicId = 3
                        },
                        new
                        {
                            Id = 57,
                            Name = "Dünya’nın Şekli",
                            TopicId = 50
                        },
                        new
                        {
                            Id = 58,
                            Name = "Dünya’nın Yapısı",
                            TopicId = 50
                        },
                        new
                        {
                            Id = 59,
                            Name = "Duyu Organları ve Önemi",
                            TopicId = 51
                        },
                        new
                        {
                            Id = 60,
                            Name = "Duyu Organlarının Temel Görevleri",
                            TopicId = 51
                        },
                        new
                        {
                            Id = 61,
                            Name = "Duyu Organlarının Sağlığı",
                            TopicId = 51
                        },
                        new
                        {
                            Id = 62,
                            Name = "Varlıkların Hareket Özellikleri",
                            TopicId = 52
                        },
                        new
                        {
                            Id = 63,
                            Name = "Cisimleri Hareket Ettirme ve Durdurma",
                            TopicId = 52
                        },
                        new
                        {
                            Id = 64,
                            Name = "Hareketli Cisimlerin Sebep Olabileceği Tehlikeler",
                            TopicId = 52
                        },
                        new
                        {
                            Id = 65,
                            Name = "Maddeyi Niteleyen Özellikler 1",
                            TopicId = 53
                        },
                        new
                        {
                            Id = 66,
                            Name = "Maddeyi Niteleyen Özellikler 2",
                            TopicId = 53
                        },
                        new
                        {
                            Id = 67,
                            Name = "Maddenin Halleri",
                            TopicId = 53
                        },
                        new
                        {
                            Id = 68,
                            Name = "Işığın Görmedeki Rolü",
                            TopicId = 54
                        },
                        new
                        {
                            Id = 69,
                            Name = "Işık Kaynakları",
                            TopicId = 54
                        },
                        new
                        {
                            Id = 70,
                            Name = "Sesin İşitmedeki Rolü",
                            TopicId = 54
                        },
                        new
                        {
                            Id = 71,
                            Name = "Çevremizdeki Sesler",
                            TopicId = 54
                        },
                        new
                        {
                            Id = 72,
                            Name = "Çevremizdeki Varlıkları Tanıyalım",
                            TopicId = 55
                        },
                        new
                        {
                            Id = 73,
                            Name = "Ben ve Çevrem",
                            TopicId = 55
                        },
                        new
                        {
                            Id = 74,
                            Name = "Doğal ve Yapay Çevre",
                            TopicId = 55
                        },
                        new
                        {
                            Id = 75,
                            Name = "Elektrikli Araç-Gereçler",
                            TopicId = 56
                        },
                        new
                        {
                            Id = 76,
                            Name = "Elektrik Kaynakları",
                            TopicId = 56
                        },
                        new
                        {
                            Id = 77,
                            Name = "Elektriğin Güvenli Kullanımı",
                            TopicId = 56
                        },
                        new
                        {
                            Id = 84,
                            Name = "Okulumuzda Hayat 1",
                            TopicId = 78
                        },
                        new
                        {
                            Id = 85,
                            Name = "Okulumuzda Hayat 2",
                            TopicId = 78
                        },
                        new
                        {
                            Id = 86,
                            Name = "Okulumuzda Hayat 3",
                            TopicId = 78
                        },
                        new
                        {
                            Id = 87,
                            Name = "Evimizde Hayat 1",
                            TopicId = 79
                        },
                        new
                        {
                            Id = 88,
                            Name = "Evimizde Hayat 2",
                            TopicId = 79
                        },
                        new
                        {
                            Id = 89,
                            Name = "Evimizde Hayat 3",
                            TopicId = 79
                        },
                        new
                        {
                            Id = 90,
                            Name = "Sağlıklı Hayat 1",
                            TopicId = 80
                        },
                        new
                        {
                            Id = 91,
                            Name = "Sağlıklı Hayat 2",
                            TopicId = 80
                        },
                        new
                        {
                            Id = 92,
                            Name = "Güvenli Hayat 1",
                            TopicId = 81
                        },
                        new
                        {
                            Id = 93,
                            Name = "Güvenli Hayat 2",
                            TopicId = 81
                        },
                        new
                        {
                            Id = 94,
                            Name = "Ülkemizde Hayat 1",
                            TopicId = 82
                        },
                        new
                        {
                            Id = 95,
                            Name = "Ülkemizde Hayat 2",
                            TopicId = 82
                        },
                        new
                        {
                            Id = 96,
                            Name = "Ülkemizde Hayat 3",
                            TopicId = 82
                        },
                        new
                        {
                            Id = 97,
                            Name = "Doğada Hayat 1",
                            TopicId = 83
                        },
                        new
                        {
                            Id = 98,
                            Name = "Doğada Hayat 2",
                            TopicId = 83
                        },
                        new
                        {
                            Id = 105,
                            Name = "Harf, Hece, Sözcük",
                            TopicId = 99
                        },
                        new
                        {
                            Id = 106,
                            Name = "Eş Anlamlı (Anlamdaş) Sözcükler",
                            TopicId = 99
                        },
                        new
                        {
                            Id = 107,
                            Name = "Zıt (Karşıt) Anlamlı Sözcükler",
                            TopicId = 99
                        },
                        new
                        {
                            Id = 108,
                            Name = "Eş Sesli (Sesteş) Sözcükler",
                            TopicId = 99
                        },
                        new
                        {
                            Id = 109,
                            Name = "Gerçek, Mecaz ve Terim Anlam",
                            TopicId = 99
                        },
                        new
                        {
                            Id = 110,
                            Name = "Sözcük Türetme - Ekler",
                            TopicId = 99
                        },
                        new
                        {
                            Id = 111,
                            Name = "Sözcükte Anlam",
                            TopicId = 99
                        },
                        new
                        {
                            Id = 112,
                            Name = "Cümle",
                            TopicId = 100
                        },
                        new
                        {
                            Id = 113,
                            Name = "Sebep - Sonuç İlişkileri",
                            TopicId = 100
                        },
                        new
                        {
                            Id = 114,
                            Name = "Karşılaştırmalar",
                            TopicId = 100
                        },
                        new
                        {
                            Id = 115,
                            Name = "Öznel - Nesnel Yargılar",
                            TopicId = 100
                        },
                        new
                        {
                            Id = 116,
                            Name = "Duygusal ve Abartılı İfadeler",
                            TopicId = 100
                        },
                        new
                        {
                            Id = 117,
                            Name = "Atasözü, Deyim, Özdeyiş",
                            TopicId = 100
                        },
                        new
                        {
                            Id = 118,
                            Name = "Dil, İfade ve Bilgi Yanlışları",
                            TopicId = 100
                        },
                        new
                        {
                            Id = 119,
                            Name = "5N 1K",
                            TopicId = 101
                        },
                        new
                        {
                            Id = 120,
                            Name = "Öykü Unsurları",
                            TopicId = 101
                        },
                        new
                        {
                            Id = 121,
                            Name = "Oluş Sırası",
                            TopicId = 101
                        },
                        new
                        {
                            Id = 122,
                            Name = "Başlık - Konu İlişkisi",
                            TopicId = 101
                        },
                        new
                        {
                            Id = 123,
                            Name = "Ana Düşünce",
                            TopicId = 101
                        },
                        new
                        {
                            Id = 124,
                            Name = "Okuma Anlama",
                            TopicId = 101
                        },
                        new
                        {
                            Id = 125,
                            Name = "Paragrafta Anlam",
                            TopicId = 101
                        },
                        new
                        {
                            Id = 126,
                            Name = "Adlar",
                            TopicId = 102
                        },
                        new
                        {
                            Id = 127,
                            Name = "Varlıkların Özelliklerini Belirten Sözcükler",
                            TopicId = 102
                        },
                        new
                        {
                            Id = 128,
                            Name = "Adın Yerine Kullanılan Sözcükler",
                            TopicId = 102
                        },
                        new
                        {
                            Id = 129,
                            Name = "Eylem Bildiren Sözcükler",
                            TopicId = 102
                        },
                        new
                        {
                            Id = 130,
                            Name = "Noktalama İşaretleri",
                            TopicId = 103
                        },
                        new
                        {
                            Id = 131,
                            Name = "Yazım Kuralları",
                            TopicId = 104
                        },
                        new
                        {
                            Id = 138,
                            Name = "Milyonlar",
                            TopicId = 132
                        },
                        new
                        {
                            Id = 139,
                            Name = "Sayı ve Şekil Örüntüleri",
                            TopicId = 132
                        },
                        new
                        {
                            Id = 140,
                            Name = "Doğal Sayılarla Toplama ve Çıkarma İşlemleri",
                            TopicId = 132
                        },
                        new
                        {
                            Id = 141,
                            Name = "Doğal Sayılarla Çarpma ve Bölme İşlemleri",
                            TopicId = 132
                        },
                        new
                        {
                            Id = 142,
                            Name = "Bir Doğal Sayının Karesi ve Küpü",
                            TopicId = 132
                        },
                        new
                        {
                            Id = 143,
                            Name = "Birim Kesirler",
                            TopicId = 133
                        },
                        new
                        {
                            Id = 144,
                            Name = "Denk Kesirler",
                            TopicId = 133
                        },
                        new
                        {
                            Id = 145,
                            Name = "Kesirlerde Sıralama",
                            TopicId = 133
                        },
                        new
                        {
                            Id = 146,
                            Name = "Basit Kesirlerde İşlemler",
                            TopicId = 133
                        },
                        new
                        {
                            Id = 147,
                            Name = "Kesirlerde Problemler",
                            TopicId = 133
                        },
                        new
                        {
                            Id = 148,
                            Name = "Ondalık Gösterim",
                            TopicId = 134
                        },
                        new
                        {
                            Id = 149,
                            Name = "Yüzdeler",
                            TopicId = 134
                        },
                        new
                        {
                            Id = 150,
                            Name = "Temel Geometrik Kavramlar ve Çizimler",
                            TopicId = 135
                        },
                        new
                        {
                            Id = 151,
                            Name = "Üçgenler ve Dörtgenler",
                            TopicId = 135
                        },
                        new
                        {
                            Id = 152,
                            Name = "Veri Toplama ve Değerlendirme",
                            TopicId = 136
                        },
                        new
                        {
                            Id = 153,
                            Name = "Uzunluk Ölçüleri",
                            TopicId = 136
                        },
                        new
                        {
                            Id = 154,
                            Name = "Çevre Uzunluğu",
                            TopicId = 136
                        },
                        new
                        {
                            Id = 155,
                            Name = "Zaman Ölçüleri",
                            TopicId = 136
                        },
                        new
                        {
                            Id = 156,
                            Name = "Alan Ölçme",
                            TopicId = 137
                        },
                        new
                        {
                            Id = 157,
                            Name = "Geometrik Cisimler",
                            TopicId = 137
                        },
                        new
                        {
                            Id = 165,
                            Name = "Yer Kabuğunun Yapısı",
                            TopicId = 158
                        },
                        new
                        {
                            Id = 166,
                            Name = "Dünyamızın Hareketleri",
                            TopicId = 158
                        },
                        new
                        {
                            Id = 167,
                            Name = "Besinler ve Özellikleri",
                            TopicId = 159
                        },
                        new
                        {
                            Id = 168,
                            Name = "İnsan Sağlığı ve Zararlı Maddeler",
                            TopicId = 159
                        },
                        new
                        {
                            Id = 169,
                            Name = "Kuvvetin Cisimler Üzerindeki Etkileri",
                            TopicId = 160
                        },
                        new
                        {
                            Id = 170,
                            Name = "Mıknatısın Çekme Kuvveti",
                            TopicId = 160
                        },
                        new
                        {
                            Id = 171,
                            Name = "Maddeyi Niteleyen Özellikler",
                            TopicId = 161
                        },
                        new
                        {
                            Id = 172,
                            Name = "Maddenin Ölçülebilir Özellikleri",
                            TopicId = 161
                        },
                        new
                        {
                            Id = 173,
                            Name = "Maddenin Halleri",
                            TopicId = 161
                        },
                        new
                        {
                            Id = 174,
                            Name = "Maddenin Isı Etkisiyle Değişimi",
                            TopicId = 161
                        },
                        new
                        {
                            Id = 175,
                            Name = "Aydınlatma Teknolojileri",
                            TopicId = 162
                        },
                        new
                        {
                            Id = 176,
                            Name = "Uygun Aydınlatma - Işık Kirliliği",
                            TopicId = 162
                        },
                        new
                        {
                            Id = 177,
                            Name = "Geçmişten Günümüze Ses Teknolojileri",
                            TopicId = 162
                        },
                        new
                        {
                            Id = 178,
                            Name = "Bilinçli Tüketici - Tasarruf",
                            TopicId = 163
                        },
                        new
                        {
                            Id = 179,
                            Name = "Geri Dönüşümün Önemi",
                            TopicId = 163
                        },
                        new
                        {
                            Id = 180,
                            Name = "Basit Elektrik Devreleri",
                            TopicId = 164
                        },
                        new
                        {
                            Id = 188,
                            Name = "Birey ve Toplum 1",
                            TopicId = 181
                        },
                        new
                        {
                            Id = 189,
                            Name = "Birey ve Toplum 2",
                            TopicId = 181
                        },
                        new
                        {
                            Id = 190,
                            Name = "Kültür ve Miras 1",
                            TopicId = 182
                        },
                        new
                        {
                            Id = 191,
                            Name = "Kültür ve Miras 2",
                            TopicId = 182
                        },
                        new
                        {
                            Id = 192,
                            Name = "İnsanlar, Yerler ve Çevre 1",
                            TopicId = 183
                        },
                        new
                        {
                            Id = 193,
                            Name = "İnsanlar, Yerler ve Çevre 2",
                            TopicId = 183
                        },
                        new
                        {
                            Id = 194,
                            Name = "Bilim, Teknoloji ve Toplum 1",
                            TopicId = 184
                        },
                        new
                        {
                            Id = 195,
                            Name = "Bilim, Teknoloji ve Toplum 2",
                            TopicId = 184
                        },
                        new
                        {
                            Id = 196,
                            Name = "Üretim, Dağıtım ve Tüketim 1",
                            TopicId = 185
                        },
                        new
                        {
                            Id = 197,
                            Name = "Üretim, Dağıtım ve Tüketim 2",
                            TopicId = 185
                        },
                        new
                        {
                            Id = 198,
                            Name = "Etkin Vatandaşlık 1",
                            TopicId = 186
                        },
                        new
                        {
                            Id = 199,
                            Name = "Etkin Vatandaşlık 2",
                            TopicId = 186
                        },
                        new
                        {
                            Id = 200,
                            Name = "Küresel Bağlantılar 1",
                            TopicId = 187
                        },
                        new
                        {
                            Id = 201,
                            Name = "Küresel Bağlantılar 2",
                            TopicId = 187
                        },
                        new
                        {
                            Id = 211,
                            Name = "Introducing Yourself",
                            TopicId = 202
                        },
                        new
                        {
                            Id = 212,
                            Name = "Common Greetings and Responses",
                            TopicId = 202
                        },
                        new
                        {
                            Id = 213,
                            Name = "Classroom Instructions",
                            TopicId = 203
                        },
                        new
                        {
                            Id = 214,
                            Name = "Polite Expressions",
                            TopicId = 203
                        },
                        new
                        {
                            Id = 215,
                            Name = "Counting to 100",
                            TopicId = 204
                        },
                        new
                        {
                            Id = 216,
                            Name = "Ordinal Numbers",
                            TopicId = 204
                        },
                        new
                        {
                            Id = 217,
                            Name = "Basic Colors",
                            TopicId = 205
                        },
                        new
                        {
                            Id = 218,
                            Name = "Shapes and Their Properties",
                            TopicId = 205
                        },
                        new
                        {
                            Id = 219,
                            Name = "Family Members",
                            TopicId = 206
                        },
                        new
                        {
                            Id = 220,
                            Name = "Describing My Family",
                            TopicId = 206
                        },
                        new
                        {
                            Id = 221,
                            Name = "Daily Activities",
                            TopicId = 207
                        },
                        new
                        {
                            Id = 222,
                            Name = "Telling the Time",
                            TopicId = 207
                        },
                        new
                        {
                            Id = 223,
                            Name = "Rooms in the House",
                            TopicId = 208
                        },
                        new
                        {
                            Id = 224,
                            Name = "Furniture and Objects",
                            TopicId = 208
                        },
                        new
                        {
                            Id = 225,
                            Name = "Common Foods",
                            TopicId = 209
                        },
                        new
                        {
                            Id = 226,
                            Name = "Healthy Eating",
                            TopicId = 209
                        },
                        new
                        {
                            Id = 227,
                            Name = "Domestic Animals",
                            TopicId = 210
                        },
                        new
                        {
                            Id = 228,
                            Name = "Wild Animals",
                            TopicId = 210
                        });
                });

            modelBuilder.Entity("Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("Subjects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Türkçe"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Matematik"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Hayat Bilgisi"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Fen Bilimleri"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Sosyal Bilgiler"
                        },
                        new
                        {
                            Id = 6,
                            Name = "T.C. İnkılâp Tarihi ve Atatürkçülük"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Yabancı Dil"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Din Kültürü ve Ahlak Bilgisi"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Türk Dili ve Edebiyatı"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Tarih"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Coğrafya"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Fizik"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Kimya"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Biyoloji"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Felsefe"
                        });
                });

            modelBuilder.Entity("Topic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("GradeId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("SubjectId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("GradeId");

                    b.HasIndex("SubjectId");

                    b.ToTable("Topics");

                    b.HasData(
                        new
                        {
                            Id = 7,
                            GradeId = 3,
                            Name = "Doğal Sayılar ve Ritmik Saymalar",
                            SubjectId = 2
                        },
                        new
                        {
                            Id = 8,
                            GradeId = 3,
                            Name = "Toplama ve Çıkarma İşlemi",
                            SubjectId = 2
                        },
                        new
                        {
                            Id = 9,
                            GradeId = 3,
                            Name = "Çarpma ve Bölme İşlemi",
                            SubjectId = 2
                        },
                        new
                        {
                            Id = 10,
                            GradeId = 3,
                            Name = "Kesirler",
                            SubjectId = 2
                        },
                        new
                        {
                            Id = 11,
                            GradeId = 3,
                            Name = "Zaman Ölçme",
                            SubjectId = 2
                        },
                        new
                        {
                            Id = 12,
                            GradeId = 3,
                            Name = "Geometrik Cisimler ve Örüntüler",
                            SubjectId = 2
                        },
                        new
                        {
                            Id = 13,
                            GradeId = 3,
                            Name = "Uzunluk, Alan ve Çevre Ölçme",
                            SubjectId = 2
                        },
                        new
                        {
                            Id = 211,
                            GradeId = 3,
                            Name = "Paralarımız",
                            SubjectId = 2
                        },
                        new
                        {
                            Id = 1,
                            GradeId = 3,
                            Name = "Harf, Hece, Sözcük ve Cümle Bilgisi",
                            SubjectId = 1
                        },
                        new
                        {
                            Id = 2,
                            GradeId = 3,
                            Name = "Söz Varlığını Geliştirme",
                            SubjectId = 1
                        },
                        new
                        {
                            Id = 3,
                            GradeId = 3,
                            Name = "Okuduğunu Anlama",
                            SubjectId = 1
                        },
                        new
                        {
                            Id = 4,
                            GradeId = 3,
                            Name = "Sözcük Türleri",
                            SubjectId = 1
                        },
                        new
                        {
                            Id = 5,
                            GradeId = 3,
                            Name = "Noktalama İşaretleri",
                            SubjectId = 1
                        },
                        new
                        {
                            Id = 6,
                            GradeId = 3,
                            Name = "Yazım Kuralları",
                            SubjectId = 1
                        },
                        new
                        {
                            Id = 50,
                            GradeId = 3,
                            Name = "Gezegenimizi Tanıyalım",
                            SubjectId = 4
                        },
                        new
                        {
                            Id = 51,
                            GradeId = 3,
                            Name = "Beş Duyumuz",
                            SubjectId = 4
                        },
                        new
                        {
                            Id = 52,
                            GradeId = 3,
                            Name = "Kuvveti Tanıyalım",
                            SubjectId = 4
                        },
                        new
                        {
                            Id = 53,
                            GradeId = 3,
                            Name = "Maddeyi Tanıyalım",
                            SubjectId = 4
                        },
                        new
                        {
                            Id = 54,
                            GradeId = 3,
                            Name = "Çevremizdeki Işık ve Sesler",
                            SubjectId = 4
                        },
                        new
                        {
                            Id = 55,
                            GradeId = 3,
                            Name = "Canlılar Dünyasına Yolculuk",
                            SubjectId = 4
                        },
                        new
                        {
                            Id = 56,
                            GradeId = 3,
                            Name = "Elektrikli Araçlar",
                            SubjectId = 4
                        },
                        new
                        {
                            Id = 78,
                            GradeId = 3,
                            Name = "Okulumuzda Hayat",
                            SubjectId = 3
                        },
                        new
                        {
                            Id = 79,
                            GradeId = 3,
                            Name = "Evimizde Hayat",
                            SubjectId = 3
                        },
                        new
                        {
                            Id = 80,
                            GradeId = 3,
                            Name = "Sağlıklı Hayat",
                            SubjectId = 3
                        },
                        new
                        {
                            Id = 81,
                            GradeId = 3,
                            Name = "Güvenli Hayat",
                            SubjectId = 3
                        },
                        new
                        {
                            Id = 82,
                            GradeId = 3,
                            Name = "Ülkemizde Hayat",
                            SubjectId = 3
                        },
                        new
                        {
                            Id = 83,
                            GradeId = 3,
                            Name = "Doğada Hayat",
                            SubjectId = 3
                        },
                        new
                        {
                            Id = 99,
                            GradeId = 4,
                            Name = "Harf, Hece ve Sözcük Bilgisi",
                            SubjectId = 1
                        },
                        new
                        {
                            Id = 100,
                            GradeId = 4,
                            Name = "Cümle Bilgisi",
                            SubjectId = 1
                        },
                        new
                        {
                            Id = 101,
                            GradeId = 4,
                            Name = "Okuma Anlama",
                            SubjectId = 1
                        },
                        new
                        {
                            Id = 102,
                            GradeId = 4,
                            Name = "Sözcük Türleri",
                            SubjectId = 1
                        },
                        new
                        {
                            Id = 103,
                            GradeId = 4,
                            Name = "Noktalama İşaretleri",
                            SubjectId = 1
                        },
                        new
                        {
                            Id = 104,
                            GradeId = 4,
                            Name = "Yazım Kuralları",
                            SubjectId = 1
                        },
                        new
                        {
                            Id = 132,
                            GradeId = 4,
                            Name = "Doğal Sayılar ve İşlemler",
                            SubjectId = 2
                        },
                        new
                        {
                            Id = 133,
                            GradeId = 4,
                            Name = "Kesirler ve Kesirlerle İşlemler",
                            SubjectId = 2
                        },
                        new
                        {
                            Id = 134,
                            GradeId = 4,
                            Name = "Ondalık Gösterim ve Yüzdeler",
                            SubjectId = 2
                        },
                        new
                        {
                            Id = 135,
                            GradeId = 4,
                            Name = "Temel Geometrik Kavramlar ve Çizimler",
                            SubjectId = 2
                        },
                        new
                        {
                            Id = 136,
                            GradeId = 4,
                            Name = "Veri Toplama ve Değerlendirme / Uzunluk ve Zaman Ölçme",
                            SubjectId = 2
                        },
                        new
                        {
                            Id = 137,
                            GradeId = 4,
                            Name = "Alan Ölçme ve Geometrik Cisimler",
                            SubjectId = 2
                        },
                        new
                        {
                            Id = 158,
                            GradeId = 4,
                            Name = "Yer Kabuğu ve Dünyamızın Hareketleri",
                            SubjectId = 4
                        },
                        new
                        {
                            Id = 159,
                            GradeId = 4,
                            Name = "Besinlerimiz",
                            SubjectId = 4
                        },
                        new
                        {
                            Id = 160,
                            GradeId = 4,
                            Name = "Kuvvetin Etkileri",
                            SubjectId = 4
                        },
                        new
                        {
                            Id = 161,
                            GradeId = 4,
                            Name = "Maddenin Özellikleri",
                            SubjectId = 4
                        },
                        new
                        {
                            Id = 162,
                            GradeId = 4,
                            Name = "Aydınlatma ve Ses Teknolojileri",
                            SubjectId = 4
                        },
                        new
                        {
                            Id = 163,
                            GradeId = 4,
                            Name = "İnsan ve Çevre / Canlılar ve Yaşam",
                            SubjectId = 4
                        },
                        new
                        {
                            Id = 164,
                            GradeId = 4,
                            Name = "Basit Elektrik Devreleri",
                            SubjectId = 4
                        },
                        new
                        {
                            Id = 181,
                            GradeId = 4,
                            Name = "Birey ve Toplum",
                            SubjectId = 4
                        },
                        new
                        {
                            Id = 182,
                            GradeId = 4,
                            Name = "Kültür ve Miras",
                            SubjectId = 4
                        },
                        new
                        {
                            Id = 183,
                            GradeId = 4,
                            Name = "İnsanlar, Yerler ve Çevreler",
                            SubjectId = 4
                        },
                        new
                        {
                            Id = 184,
                            GradeId = 4,
                            Name = "Bilim, Teknoloji ve Toplum",
                            SubjectId = 4
                        },
                        new
                        {
                            Id = 185,
                            GradeId = 4,
                            Name = "Üretim, Dağıtım ve Tüketim",
                            SubjectId = 4
                        },
                        new
                        {
                            Id = 186,
                            GradeId = 4,
                            Name = "Etkin Vatandaşlık",
                            SubjectId = 4
                        },
                        new
                        {
                            Id = 187,
                            GradeId = 4,
                            Name = "Küresel Bağlantılar",
                            SubjectId = 4
                        },
                        new
                        {
                            Id = 202,
                            GradeId = 4,
                            Name = "Greetings",
                            SubjectId = 5
                        },
                        new
                        {
                            Id = 203,
                            GradeId = 4,
                            Name = "Classroom Rules",
                            SubjectId = 5
                        },
                        new
                        {
                            Id = 204,
                            GradeId = 4,
                            Name = "Numbers and Counting",
                            SubjectId = 5
                        },
                        new
                        {
                            Id = 205,
                            GradeId = 4,
                            Name = "Colors and Shapes",
                            SubjectId = 5
                        },
                        new
                        {
                            Id = 206,
                            GradeId = 4,
                            Name = "My Family",
                            SubjectId = 5
                        },
                        new
                        {
                            Id = 207,
                            GradeId = 4,
                            Name = "Daily Routines",
                            SubjectId = 5
                        },
                        new
                        {
                            Id = 208,
                            GradeId = 4,
                            Name = "My House",
                            SubjectId = 5
                        },
                        new
                        {
                            Id = 209,
                            GradeId = 4,
                            Name = "Food and Drinks",
                            SubjectId = 5
                        },
                        new
                        {
                            Id = 210,
                            GradeId = 4,
                            Name = "Animals",
                            SubjectId = 5
                        });
                });

            modelBuilder.Entity("Worksheet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("BadgeText")
                        .HasColumnType("text");

                    b.Property<int?>("BookTestId")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("GradeId")
                        .HasColumnType("integer");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("text");

                    b.Property<bool>("IsPracticeTest")
                        .HasColumnType("boolean");

                    b.Property<int>("MaxDurationSeconds")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("SubjectId")
                        .HasColumnType("integer");

                    b.Property<string>("Subtitle")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("BookTestId");

                    b.HasIndex("GradeId");

                    b.HasIndex("SubjectId");

                    b.ToTable("Worksheets");
                });

            modelBuilder.Entity("WorksheetInstance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<int>("StudentId")
                        .HasColumnType("integer");

                    b.Property<int>("WorksheetId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.HasIndex("WorksheetId");

                    b.ToTable("TestInstances");
                });

            modelBuilder.Entity("WorksheetInstanceQuestion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsCorrect")
                        .HasColumnType("boolean");

                    b.Property<int?>("SelectedAnswerId")
                        .HasColumnType("integer");

                    b.Property<bool>("ShowCorrectAnswer")
                        .HasColumnType("boolean");

                    b.Property<int>("TimeTaken")
                        .HasColumnType("integer");

                    b.Property<int>("WorksheetInstanceId")
                        .HasColumnType("integer");

                    b.Property<int>("WorksheetQuestionId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("SelectedAnswerId");

                    b.HasIndex("WorksheetInstanceId");

                    b.HasIndex("WorksheetQuestionId");

                    b.ToTable("TestInstanceQuestions");
                });

            modelBuilder.Entity("WorksheetPrototype", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("DifficultyLevel")
                        .HasColumnType("integer");

                    b.Property<int>("GradeId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("GradeId");

                    b.ToTable("TestPrototypes");
                });

            modelBuilder.Entity("WorksheetPrototypeDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("QuestionCount")
                        .HasColumnType("integer");

                    b.Property<int>("SubjectId")
                        .HasColumnType("integer");

                    b.Property<int>("WorksheetPrototypeId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("SubjectId");

                    b.HasIndex("WorksheetPrototypeId");

                    b.ToTable("TestPrototypeDetail");
                });

            modelBuilder.Entity("ExamApp.Api.Data.Answer", b =>
                {
                    b.HasOne("ExamApp.Api.Data.Question", "Question")
                        .WithMany("Answers")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");
                });

            modelBuilder.Entity("ExamApp.Api.Data.BookTest", b =>
                {
                    b.HasOne("ExamApp.Api.Data.Book", "Book")
                        .WithMany("BookTests")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");
                });

            modelBuilder.Entity("ExamApp.Api.Data.Leaderboard", b =>
                {
                    b.HasOne("ExamApp.Api.Data.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("ExamApp.Api.Data.Parent", b =>
                {
                    b.HasOne("ExamApp.Api.Data.User", "User")
                        .WithOne("Parent")
                        .HasForeignKey("ExamApp.Api.Data.Parent", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ExamApp.Api.Data.Question", b =>
                {
                    b.HasOne("ExamApp.Api.Data.Answer", "CorrectAnswer")
                        .WithMany()
                        .HasForeignKey("CorrectAnswerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ExamApp.Api.Data.Passage", "Passage")
                        .WithMany("Questions")
                        .HasForeignKey("PassageId");

                    b.HasOne("SubTopic", "SubTopic")
                        .WithMany()
                        .HasForeignKey("SubTopicId");

                    b.HasOne("Subject", "Subject")
                        .WithMany("Questions")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Topic", "Topic")
                        .WithMany()
                        .HasForeignKey("TopicId");

                    b.Navigation("CorrectAnswer");

                    b.Navigation("Passage");

                    b.Navigation("SubTopic");

                    b.Navigation("Subject");

                    b.Navigation("Topic");
                });

            modelBuilder.Entity("ExamApp.Api.Data.Student", b =>
                {
                    b.HasOne("Grade", "Grade")
                        .WithMany()
                        .HasForeignKey("GradeId");

                    b.HasOne("ExamApp.Api.Data.Parent", null)
                        .WithMany("Children")
                        .HasForeignKey("ParentId");

                    b.HasOne("ExamApp.Api.Data.User", "User")
                        .WithOne("Student")
                        .HasForeignKey("ExamApp.Api.Data.Student", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Grade");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ExamApp.Api.Data.StudentBadge", b =>
                {
                    b.HasOne("ExamApp.Api.Data.Badge", "Badge")
                        .WithMany("StudentBadges")
                        .HasForeignKey("BadgeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ExamApp.Api.Data.Student", "Student")
                        .WithMany("StudentBadges")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Badge");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("ExamApp.Api.Data.StudentPointHistory", b =>
                {
                    b.HasOne("ExamApp.Api.Data.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("ExamApp.Api.Data.StudentReward", b =>
                {
                    b.HasOne("ExamApp.Api.Data.Reward", "Reward")
                        .WithMany("StudentRewards")
                        .HasForeignKey("RewardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ExamApp.Api.Data.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Reward");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("ExamApp.Api.Data.StudentSpecialEvent", b =>
                {
                    b.HasOne("ExamApp.Api.Data.SpecialEvent", "SpecialEvent")
                        .WithMany()
                        .HasForeignKey("SpecialEventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ExamApp.Api.Data.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SpecialEvent");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("ExamApp.Api.Data.Teacher", b =>
                {
                    b.HasOne("ExamApp.Api.Data.User", "User")
                        .WithOne("Teacher")
                        .HasForeignKey("ExamApp.Api.Data.Teacher", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ExamApp.Api.Data.WorksheetQuestion", b =>
                {
                    b.HasOne("ExamApp.Api.Data.Question", "Question")
                        .WithMany("WorksheetQuestions")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Worksheet", "Worksheet")
                        .WithMany("WorksheetQuestions")
                        .HasForeignKey("TestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");

                    b.Navigation("Worksheet");
                });

            modelBuilder.Entity("GradeSubject", b =>
                {
                    b.HasOne("Grade", "Grade")
                        .WithMany("GradeSubjects")
                        .HasForeignKey("GradeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Subject", "Subject")
                        .WithMany("GradeSubjects")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Grade");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("StudentPoint", b =>
                {
                    b.HasOne("ExamApp.Api.Data.Student", "Student")
                        .WithMany("StudentPoints")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("SubTopic", b =>
                {
                    b.HasOne("Topic", "Topic")
                        .WithMany("SubTopics")
                        .HasForeignKey("TopicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Topic");
                });

            modelBuilder.Entity("Topic", b =>
                {
                    b.HasOne("Grade", "Grade")
                        .WithMany()
                        .HasForeignKey("GradeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Subject", "Subject")
                        .WithMany()
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Grade");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("Worksheet", b =>
                {
                    b.HasOne("ExamApp.Api.Data.BookTest", "BookTest")
                        .WithMany()
                        .HasForeignKey("BookTestId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Grade", "Grade")
                        .WithMany()
                        .HasForeignKey("GradeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Subject", "Subject")
                        .WithMany()
                        .HasForeignKey("SubjectId");

                    b.Navigation("BookTest");

                    b.Navigation("Grade");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("WorksheetInstance", b =>
                {
                    b.HasOne("ExamApp.Api.Data.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Worksheet", "Worksheet")
                        .WithMany()
                        .HasForeignKey("WorksheetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");

                    b.Navigation("Worksheet");
                });

            modelBuilder.Entity("WorksheetInstanceQuestion", b =>
                {
                    b.HasOne("ExamApp.Api.Data.Answer", "SelectedAnswer")
                        .WithMany()
                        .HasForeignKey("SelectedAnswerId");

                    b.HasOne("WorksheetInstance", "WorksheetInstance")
                        .WithMany("WorksheetInstanceQuestions")
                        .HasForeignKey("WorksheetInstanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ExamApp.Api.Data.WorksheetQuestion", "WorksheetQuestion")
                        .WithMany()
                        .HasForeignKey("WorksheetQuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SelectedAnswer");

                    b.Navigation("WorksheetInstance");

                    b.Navigation("WorksheetQuestion");
                });

            modelBuilder.Entity("WorksheetPrototype", b =>
                {
                    b.HasOne("Grade", "Grade")
                        .WithMany()
                        .HasForeignKey("GradeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Grade");
                });

            modelBuilder.Entity("WorksheetPrototypeDetail", b =>
                {
                    b.HasOne("Subject", "Subject")
                        .WithMany()
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WorksheetPrototype", "WorksheetPrototype")
                        .WithMany("WorksheetPrototypeDetails")
                        .HasForeignKey("WorksheetPrototypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subject");

                    b.Navigation("WorksheetPrototype");
                });

            modelBuilder.Entity("ExamApp.Api.Data.Badge", b =>
                {
                    b.Navigation("StudentBadges");
                });

            modelBuilder.Entity("ExamApp.Api.Data.Book", b =>
                {
                    b.Navigation("BookTests");
                });

            modelBuilder.Entity("ExamApp.Api.Data.Parent", b =>
                {
                    b.Navigation("Children");
                });

            modelBuilder.Entity("ExamApp.Api.Data.Passage", b =>
                {
                    b.Navigation("Questions");
                });

            modelBuilder.Entity("ExamApp.Api.Data.Question", b =>
                {
                    b.Navigation("Answers");

                    b.Navigation("WorksheetQuestions");
                });

            modelBuilder.Entity("ExamApp.Api.Data.Reward", b =>
                {
                    b.Navigation("StudentRewards");
                });

            modelBuilder.Entity("ExamApp.Api.Data.Student", b =>
                {
                    b.Navigation("StudentBadges");

                    b.Navigation("StudentPoints");
                });

            modelBuilder.Entity("ExamApp.Api.Data.User", b =>
                {
                    b.Navigation("Parent");

                    b.Navigation("Student");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("Grade", b =>
                {
                    b.Navigation("GradeSubjects");
                });

            modelBuilder.Entity("Subject", b =>
                {
                    b.Navigation("GradeSubjects");

                    b.Navigation("Questions");
                });

            modelBuilder.Entity("Topic", b =>
                {
                    b.Navigation("SubTopics");
                });

            modelBuilder.Entity("Worksheet", b =>
                {
                    b.Navigation("WorksheetQuestions");
                });

            modelBuilder.Entity("WorksheetInstance", b =>
                {
                    b.Navigation("WorksheetInstanceQuestions");
                });

            modelBuilder.Entity("WorksheetPrototype", b =>
                {
                    b.Navigation("WorksheetPrototypeDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
